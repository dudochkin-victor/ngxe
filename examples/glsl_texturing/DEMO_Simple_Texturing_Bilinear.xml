<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<!--
==============================================================================
AUTHOR:		JeGX - jegx@ozone3d.net
DATE:		27.03.2006
PURPOSE:	GLSL Texturing.
TUTORIAL:	http://www.ozone3d.net/tutorials/glsl_texturing.php

====================================
 \==:: http://www.oZone3D.Net ::==/
  ================================
==============================================================================
-->


<hyperion version_major="1" version_minor="3">


<scene name="GLSL_Texturing_Demo"  display_fps="TRUE" vsync="TRUE" show_ref_grid="TRUE" display_hyperion_logo="FALSE" >
	<window_size width="1024" height="768" />
	<global_ambient_light r="0.1" g="0.1" b="0.1" a="1.0" />
	<background_color r="0.2" g="0.3" b="0.3" />
	<check_hardware_caps glsl="TRUE" />
</scene>




<camera name="Main_Camera" navigation_mode="FLY" display_position="FALSE" display_view_direction="FALSE" >
	<position x="-4.60" y="92.95" z="395.69" />
	<lookat x="0.01" y="-0.18" z="-0.98" w="0.0" />
</camera>




<!--
http://www.delilah.tk/

Night
Released at Evoke [Germany], 2004
-->
<texture name="night_tex" filename="data/night_by_delilah.png" filtering_mode="NONE" />

<material name="plane_mat" shader_program_name="SimpleTexturingShader" />


<mesh name="mesh_plane" shape_type="PLANE" lighting="FALSE" texturing="TRUE" polygon_mode="SOLID" use_vbo="TRUE" >
	<plane x_size="400.0" z_size="400.0" num_segs_x="10" num_segs_z="10" />
	<attach_material name="plane_mat" />
	
	<texture material_name="plane_mat" texture_name="night_tex" texture_unit="0" />
	
	<position x="0.0" y="0.0" z="0.0" />
	<orientation pitch="90.0" />
</mesh>



<shader_program name="SimpleTexturingShader"  >
	<constant_1i name="colorMap" value="0" />
	
	<raw_data><![CDATA[	 
		[Vertex_Shader]

		void main()
		{	
			gl_TexCoord[0] = gl_MultiTexCoord0;
			gl_Position = ftransform();		
		}
		[Pixel_Shader]
		
		uniform sampler2D colorMap;
		
		
		#define textureWidth 600.0
		#define textureHeight 800.0	
		#define texel_size_x 1.0 / textureWidth
		#define texel_size_y 1.0 / textureHeight

		vec4 texture2D_bilinear( sampler2D tex, vec2 uv )
		{
			vec2 f;

			f.x	= fract( uv.x * textureWidth );
			f.y	= fract( uv.y * textureHeight );

			vec4 t00 = texture2D( tex, uv + vec2( 0.0, 0.0 ));
			vec4 t10 = texture2D( tex, uv + vec2( texel_size_x, 0.0 ));
			vec4 tA = mix( t00, t10, f.x);

			vec4 t01 = texture2D( tex, uv + vec2( 0.0, texel_size_y ) );
			vec4 t11 = texture2D( tex, uv + vec2( texel_size_x, texel_size_y ) );

			vec4 tB = mix( t01, t11, f.x );

			return mix( tA, tB, f.y );
		}			

		void main (void)
		{
			gl_FragColor = texture2D_bilinear( colorMap, gl_TexCoord[0].xy);
		}
	   	]]></raw_data>

</shader_program>


</hyperion>
